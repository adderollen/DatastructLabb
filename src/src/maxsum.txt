Uppgift 3 Labb 1
-----------------
Robin Hammaräng, Andreas Rolén, Grupp 35

maxSubSum summerar alla delsummor av ett fält och jämför vilken som är störst samt berättar start och slutelement för den maximala summan.

Handviftning (maxSubSum1):
Yttersta loopen(i) går n gånger.
Mellersta loopen(j) går i värsta fallet n gånger.
Innersta loopen(k) går i värsta fallet n gånger. 
T(n) = n*n*n => O(n^3)

Handviftning (maxSubSum2):
Yttersta loopen(i) går n gånger.
Innersta loopen(j) går i värsta fallet n gånger. 
T(n) = n*n* => O(n^2)

Handviftning (maxSubSum3):
Loopen körs n gånger.
T(n) = O(n)

 
Matematisk Analys (maxSubSum1):
 
 Sum[Sum[Sum[1, {k, i, j}], {j, i, (n-1)}], {i, 0, (n-1)}]
 
Pedantisk Analys (maxSubSum2):
RadNR								Antal Operationer
------								-----------------
int maxSum = 0;			 			 1
int thisSum = 0;					 1
for( int i = 0;						 1
		j = 0;	 					 1	
		j < a.length; 				 1 every turn
		j++ ) {						 2 every turn
	thisSum += a[ j ];				 3 every turn (read variable, add variable, assign variable)
	if( thisSum > maxSum ) {		 1 every turn
		maxSum = thisSum;			 2 every turn (read, assign)
		seqStart = i;				 2 every turn
		seqEnd   = j;				 2 every turn
	}
	else if( thisSum < 0 ) {		 1 every turn
		i = j + 1;					 3 every turn
		thisSum = 0;				 1 every turn
	}
}
return maxSum;						 1

T(n) = 1+1+1+1+1+(n+1)*1+(2+3+1+2+2+2+1+3+1)*n+1 = 18n + 7 => O(n)